body {
    font-family: sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    color: #333;
}

header {
    background: #333;
    color: #fff;
    padding: 1rem 0;
    text-align: center;
}

header h1 {
    margin: 0;
    font-size: 2rem;
}

header p {
    margin: 0;
    font-size: 1rem;
}

main {
    padding: 1rem;
    max-width: 800px;
    margin: 20px auto;
    background: #fff;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.search-bar-container {
    margin-bottom: 1rem;
}

.search-bar-container input {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.category-filters-container {
    margin-bottom: 1rem;
}

.category-filter {
    margin-right: 0.5rem;
    padding: 0.4rem 0.6rem;
    border: none;
    background-color: #eee;
    border-radius: 4px;
    cursor: pointer;
}

.category-filter.active {
    background-color: #28a745;
    color: #fff;
}

#menu-container ul {
    list-style: none;
    padding: 0;
}

/* Modified rule for better layout with button */
#menu-container li {
    display: flex; /* Use flexbox for alignment */
    justify-content: space-between; /* Pushes button to the right */
    align-items: center; /* Vertically aligns text and button */
    padding: 0.75rem 0.5rem; /* Adjust padding */
    border-bottom: 1px #eee solid;
}

#menu-container li:last-child {
    border-bottom: none;
}

/* Styling for the add to cart button (can be an alternative to dynamic JS styling) */
.add-to-cart-btn {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.5rem 0.8rem; /* Slightly larger padding */
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9rem;
    white-space: nowrap; /* Prevents button text from wrapping */
}

.add-to-cart-btn:hover {
    background-color: #0056b3;
}

footer {
    text-align: center;
    padding: 1rem 0;
    margin-top: 2rem;
    background: #333;
    color: #fff;
}

/* Cart Styling */
#cart-container {
    margin-top: 2rem;
    padding: 1rem;
    background-color: #e9ecef;
    border-radius: 5px;
}

#cart-container h2 {
    margin-top: 0;
    color: #333;
}

#cart-items p {
    font-style: italic;
}

/* Cart Item Styling to accommodate remove button */
.cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center; /* Vertically align text and button */
    padding: 0.5rem 0;
    border-bottom: 1px solid #ccc;
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item span { /* To allow text to not stretch if button is large */
    flex-grow: 1; /* Allow text to take available space */
}

.remove-from-cart-btn {
    background-color: #dc3545; /* Red for removal */
    color: white;
    border: none;
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.8rem; /* Slightly smaller */
    margin-left: 10px; /* Space from item text */
    white-space: nowrap;
}

.remove-from-cart-btn:hover {
    background-color: #c82333;
}

.remove-from-cart-btn:active {
    filter: brightness(85%);
}


#cart-total {
    font-weight: bold;
}

#checkout-button {
    display: block;
    width: 100%;
    padding: 0.75rem;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    margin-top: 1rem;
}

#checkout-button:hover {
    background-color: #218838;
}

/* Address form styling */
#address-container {
    margin-top: 2rem;
    padding: 1rem;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 5px;
}
#address-container .address-field {
    margin-bottom: 0.75rem;
}
#address-container label {
    display: block;
    margin-bottom: 0.25rem;
}
#address-container input[type="text"] {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ccc;
    border-radius: 4px;
}
#save-address-button {
    display: block;
    width: 100%;
    padding: 0.75rem;
    background-color: #17a2b8;
    color: white;
    border: none;
    border-radius: 5px;
    margin-top: 0.5rem;
    cursor: pointer;
}
#save-address-button:hover {
    background-color: #138496;
}

/* PIX Display Styling */
#pix-display-container {
    margin-top: 2rem;
    padding: 1.5rem;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 5px;
    text-align: center; /* Center align content */
}

#pix-display-container h2 {
    margin-top: 0;
    color: #333;
}

#pix-qr-code {
    margin: 1rem auto;
    /* Padding can create a border effect around the QR code. 
       Adjust or remove as desired. For now, let's reduce it or make it 0 
       if the QR code itself should be exactly 200x200.
       If the QR code library adds its own margin/padding, this might need further adjustment.
       Let's keep a minimal padding to act as a small border. */
    padding: 5px; 
    background-color: #fff; /* Background for the container, if QR is smaller or has transparency */
    border: 1px solid #ccc; /* Border for the container */
    width: 210px;  /* Container width: 200px for QR + 2*5px padding */
    height: 210px; /* Container height: 200px for QR + 2*5px padding */
    /* line-height, text-align, font-style, color are no longer needed for placeholder text */
    display: flex; /* To help center the img/canvas if it's smaller than container */
    justify-content: center;
    align-items: center;
}

/* Optional: If qrcode.js generates an img or canvas, you might want to style it directly */
#pix-qr-code img, 
#pix-qr-code canvas {
    /* The library sets the width and height on the element directly.
       This ensures it's displayed as a block and respects its own dimensions. */
    display: block; 
}

#pix-copy-paste-code {
    display: inline-block; /* Or block with text-align:center on parent */
    padding: 0.5rem;
    background-color: #e9ecef;
    border: 1px dashed #ccc;
    word-break: break-all; /* Ensure long codes wrap */
}

#confirm-payment-button {
    display: inline-block; /* Or block with margin auto for centering */
    padding: 0.75rem 1.5rem;
    background-color: #17a2b8;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    margin-top: 1.5rem;
}

#confirm-payment-button:hover {
    background-color: #138496;
}

/* WhatsApp Share Button Styling */
#whatsapp-share-button {
    display: block; /* Make it a block element to take full width or center with margin auto */
    width: fit-content; /* Adjust width to content or set a specific width */
    margin: 10px auto 0 auto; /* Top margin, auto for left/right to center */
    padding: 0.75rem 1.5rem;
    background-color: #25D366; /* WhatsApp Green */
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    text-decoration: none; /* If it were an <a> tag */
}

#whatsapp-share-button:hover {
    background-color: #1EBE57;
}

/* Order History Styling */
#order-history-container {
    margin-top: 2rem;
    padding: 1.5rem;
    background-color: #f0f0f0; /* Slightly different background */
    border: 1px solid #ddd;
    border-radius: 5px;
}

#order-history-container h2 {
    margin-top: 0;
    color: #333;
}

.past-order {
    padding: 1rem;
    margin-bottom: 1rem;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.past-order h3 { /* For Order ID or Date */
    margin-top: 0;
    font-size: 1.1rem;
    color: #555;
}

.past-order ul {
    list-style: disc;
    margin-left: 20px;
    padding-left: 0;
}

.past-order li {
    font-size: 0.9rem;
    color: #444;
}

.order-again-btn {
    background-color: #ffc107; /* A warning/amber color */
    color: #212529;
    border: none;
    padding: 0.5rem 0.8rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9rem;
    margin-top: 0.5rem;
}

.order-again-btn:hover {
    background-color: #e0a800;
}

/* Button Active States for Visual Feedback */

.add-to-cart-btn:active,
#checkout-button:active,
#confirm-payment-button:active,
#whatsapp-share-button:active,
.order-again-btn:active {
    /* Darken background slightly or use a transform for a "pressed" effect */
    /* Option 1: Darken background (adjust filter or use specific darker colors) */
    filter: brightness(85%);
    
    /* Option 2: Transform (can sometimes affect layout if not careful) */
    /* transform: translateY(1px); */
    /* box-shadow: inset 0 0 5px rgba(0,0,0,0.2); */
}

/* Ensure :hover styles are defined for a good experience too */
/* (Most already have hover styles, but adding for completeness if any were missed) */

.add-to-cart-btn:hover {
    background-color: #0056b3; /* Already defined */
}

#checkout-button:hover {
    background-color: #218838; /* Already defined */
}

#confirm-payment-button:hover {
    background-color: #138496; /* Already defined */
}

#whatsapp-share-button:hover {
    background-color: #1EBE57; /* Already defined */
}

.order-again-btn:hover {
    background-color: #e0a800; /* Already defined */
}

/* General Body and Typography Adjustments for smaller screens */
@media (max-width: 768px) {
    body {
        font-size: 14px; /* Slightly smaller base font for mobile */
    }

    header h1 {
        font-size: 1.5rem; /* Adjust header font size */
    }

    main {
        padding: 0.5rem; /* Reduce padding on main content */
        margin: 10px;    /* Reduce margin */
    }

    /* Ensure buttons are easily tappable */
    button, .add-to-cart-btn, .remove-from-cart-btn, .order-again-btn {
        padding: 0.8rem 1rem; /* Increase padding for easier tapping */
        font-size: 0.95rem;
    }
}

/* Menu Container adjustments */
@media (max-width: 600px) {
    #menu-container ul li, 
    .cart-item {
        flex-direction: column; /* Stack item details and button/remove vertically */
        align-items: flex-start; /* Align items to the start */
    }

    #menu-container ul li span,
    .cart-item span {
        margin-bottom: 0.5rem; /* Space between text and button */
    }

    .add-to-cart-btn,
    .remove-from-cart-btn {
        width: 100%; /* Make buttons full width for easier tapping */
        margin-left: 0; /* Reset margin if any */
        padding: 0.75rem;
        box-sizing: border-box; /* Include padding and border in the element's total width and height */
    }
}

/* Cart, PIX, Order History sections adjustments */
@media (max-width: 768px) {
    #cart-container,
    #pix-display-container,
    #order-history-container {
        padding: 1rem; /* Adjust padding */
    }

    #pix-qr-code {
        /* Make QR code responsive if needed, but it's fixed size from JS.
           Container might need to allow scrolling or QR size adjusted in JS for very small screens.
           For now, ensure its container doesn't break layout. Max-width can help. */
        max-width: 100%; 
        /* If QR code is 200px, container width was 210px. 
           This means screen must be at least ~220px wide for it not to overflow.
           Consider making QR code size dynamic in JS for very small screens,
           or accept that very narrow screens might have horizontal scroll for it. */
    }

    #confirm-payment-button,
    #whatsapp-share-button {
        /* Ensure these buttons stack nicely if they were inline-block */
        display: block;
        width: 100%;
        margin-top: 0.75rem;
        margin-left: 0; /* Reset margin-left if they were inline */
        box-sizing: border-box;
    }
}

/* Footer adjustments */
@media (max-width: 768px) {
    footer {
        padding: 0.8rem 0;
        font-size: 0.8rem;
    }
}

/* Further adjustments for very small screens (e.g., less than 400px) */
@media (max-width: 400px) {
    header h1 {
        font-size: 1.2rem;
    }
    
    body {
        font-size: 13px;
    }

    /* Ensure buttons are still reasonably sized */
    button, .add-to-cart-btn, .remove-from-cart-btn, .order-again-btn {
        padding: 0.6rem 0.8rem; 
        font-size: 0.9rem;
    }

    #pix-qr-code {
        /* On very small screens, the 200px QR might be too big.
           The container is 210px. If screen is < 210px, it will overflow.
           A smaller QR code generated by JS would be ideal here.
           For now, this CSS won't shrink the QR code itself, just its container if possible. */
        /* width: 160px; */ /* Example: make container smaller if QR code was also made smaller */
        /* height: 160px; */ /* JS would need to generate 150x150 QR for 5px padding */
                       /* This assumes JS QR generation size is also adapted. */
                       /* If JS QR size is fixed, then this might clip or look odd. */
                       /* Let's assume JS QR size is not changed by this CSS for now. */
    }
}
